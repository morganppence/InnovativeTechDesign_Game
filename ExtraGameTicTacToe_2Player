<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f9;
        }

        .game-container {
            text-align: center;
        }

        h1 {
            margin-bottom: 20px;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2rem;
            font-weight: bold;
            border: 2px solid #ccc;
            cursor: pointer;
        }

        .cell.taken {
            pointer-events: none;
            color: #555;
        }

        .message {
            margin-top: 20px;
            font-size: 1.2rem;
            font-weight: bold;
        }

        .restart {
            margin-top: 10px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
        }

        .restart:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="game-container">
        <h1>Tic Tac Toe</h1>
        <div class="board" id="board"></div>
        <div class="message" id="message"></div>
        <button class="restart" onclick="restartGame()">Restart</button>
    </div>

    <script>
        const board = document.getElementById('board');
        const message = document.getElementById('message');
        let currentPlayer = 'X';
        let gameActive = true;
        let boardState = Array(9).fill(null);

        function createBoard() {
            board.innerHTML = '';
            boardState.forEach((cell, index) => {
                const cellElement = document.createElement('div');
                cellElement.classList.add('cell');
                cellElement.dataset.index = index;
                cellElement.addEventListener('click', handleCellClick);
                cellElement.textContent = cell;
                board.appendChild(cellElement);
            });
        }

        function handleCellClick(event) {
            const index = event.target.dataset.index;

            if (!gameActive || boardState[index]) return;

            boardState[index] = currentPlayer;
            event.target.textContent = currentPlayer;
            event.target.classList.add('taken');

            if (checkWin()) {
                message.textContent = `Player ${currentPlayer} wins!`;
                gameActive = false;
                return;
            }

            if (boardState.every(cell => cell)) {
                message.textContent = "It's a draw!";
                gameActive = false;
                return;
            }

            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            message.textContent = `Player ${currentPlayer}'s turn.`;
        }

        function checkWin() {
            const winningCombinations = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
                [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
                [0, 4, 8], [2, 4, 6]            // Diagonals
            ];

            return winningCombinations.some(combination => {
                const [a, b, c] = combination;
                return boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c];
            });
        }

        function restartGame() {
            currentPlayer = 'X';
            gameActive = true;
            boardState = Array(9).fill(null);
            message.textContent = `Player ${currentPlayer}'s turn.`;
            createBoard();
        }

        // Initialize the game
        message.textContent = `Player ${currentPlayer}'s turn.`;
        createBoard();
    </script>
</body>
</html>
